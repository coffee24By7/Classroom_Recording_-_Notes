##Java Script Regex Examples

################################################################################
##Get HTML Tag(s)
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1> 

################################################################################
##Trim White Space From String
^[ \t]+|[ \t]+$

################################################################################
##Trim Line Breaks
^[ \s]+|[ \s]+$

################################################################################
##Valid IP Address
\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b

################################################################################
##Is A Valid Date	 yyyy-mm-dd
^(19|20)\d\d([- /.])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$

################################################################################
##Is A Valid Date	 mm/dd/yyyy
^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d$

################################################################################
##Is A Valid Date	 dd-mm-yyyy
^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\d\d$

################################################################################
##Is a Visa Card
^4[0-9]{12}(?:[0-9]{3})?$

################################################################################
##Is a Mastercard
^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$

################################################################################
##Is AMEX
^3[47][0-9]{13}$

################################################################################
##IS Diners
^3(?:0[0-5]|[68][0-9])[0-9]{11}$

################################################################################
##Is Discover
^6(?:011|5[0-9]{2})[0-9]{12}$

################################################################################
##Is JCB
^(?:2131|1800|35\d{3})\d{11}$

################################################################################
##Is a Credit Card Of Any Type
^(?:4[0-9]{12}(?:[0-9]{3})?          # Visa
 |  (?:5[1-5][0-9]{2}                # MasterCard
 | 222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}
 |  3[47][0-9]{13}                   # American Express
 |  3(?:0[0-5]|[68][0-9])[0-9]{11}   # Diners Club
 |  6(?:011|5[0-9]{2})[0-9]{12}      # Discover
 |  (?:2131|1800|35\d{3})\d{11}      # JCB
)$

################################################################################
##String contains only numbers
^([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$

################################################################################
##Number Matches
^([01][0-9][0-9]|2[0-4][0-9]|25[0-5])$ -- 000..255 
^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$ --0 or 000..255	    
^(0?[0-9]?[0-9]|1[01][0-9]|12[0-7])$ -- 0 or 000..127
	  
################################################################################
##Is a valid Email
^(?=[A-Z0-9][A-Z0-9@._%+-]{5,253}+$)[A-Z0-9._%+-]{1,64}+@
(?:(?=[A-Z0-9-]{1,63}+\.)[A-Z0-9]++(?:-[A-Z0-9]++)*+\.){1,8}+[A-Z]{2,63}+$

################################################################################
##All Possible Emails addresses world wide
\A(?=[a-z0-9@.!#$%&'*+/=?^_'{|}~-]{6,254}\z)
 (?=[a-z0-9.!#$%&'*+/=?^_'{|}~-]{1,64}@)
 [a-z0-9!#$%&'*+/=?^_'{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_'{|}~-]+)*
@ (?:(?=[a-z0-9-]{1,63}\.)[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+
  (?=[a-z0-9-]{1,63}\z)[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\z

################################################################################
##Find floating point numbers
^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$


################################################################################
##Match any two words are close together but not necessarily touching each other in same order left to right
\bword1\W+(?:\w+\W+){1,6}?word2\b

################################################################################
##Match any two words are close together but not necessarily touching each other in either order
\b(?:word1\W+(?:\w+\W+){1,6}?word2|word2\W+(?:\w+\W+){1,6}?word1)\b

################################################################################
##Match any two words from a list close together but not necessarily touching each other
\b(word1|word2|word3)(?:\W+\w+){1,6}?\W+(word1|word2|word3)\b

################################################################################
##Match complete sentence
^(?=.*?\bmust-have\b)(?=.*?\bmandatory\b)((?!avoid|illegal).)*$

################################################################################
##Find all HTML tags and group by tag name
<(?P<tag>[A-Z][A-Z0-9]*)\b[^>]*>.*?</(?P=tag)>

################################################################################
##count occurances of more than one word
/\b\d+ (<word1>|<word2|<word3>)s?\b/

################################################################################
##Subtract one of string name value 
function minusOne(match, amount, unit) {
  amount = Number(amount) - 1;
  if (amount == 1) { // only one left, remove the 's'
    unit = unit.slice(0, unit.length - 1);
  } else if (amount == 0) {
    amount = "no";
  }
  return amount + " " + unit;
}

### Example
### input  let stock = "1 car, 2 bike, and 101 taxi";
### console.log(stock.replace(/(\d+) (\w+)/g, minusOne));
### output no car, 1 bike, and 100 taxi


################################################################################
##Get where a value starts in a string
let input = "A string with 3 numbers in it 55 42 102 88 99 ";
let number = /\b\d+\b/g;
let match;
while (match = number.exec(input)) {
  console.log("Found", match[0], "at", match.index);
}
##   Found 3 at 14
##   Found 55 at 30
##   Found 42 at 33
##   Found 88 at 40 ...  and so on


################################################################################
##get text between quotes
/"([^']*)"/

################################################################################
##Replace special characters
string.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, '')